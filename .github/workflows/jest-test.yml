name: Test CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  jest-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install MySQL
        run: |
          sudo apt update
          sudo apt install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl enable mysql

      - name: Wait for MySQL to Be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {60..0}; do
            if sudo mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "MySQL not ready yet. Retrying in 2 seconds..."
            sleep 2
          done
          if [ "$i" = 0 ]; then
            echo "MySQL did not start in time."
            sudo journalctl -u mysql --no-pager | tail -n 20
            exit 1
          fi

      - name: Debug MySQL Variables
        run: |
          echo "DB_USER: ${{ secrets.DB_USER }}"
          echo "DB_ROOT_PASSWORD length: ${#DB_ROOT_PASSWORD}"

      - name: Secure MySQL Installation
        run: |
          echo "Securing MySQL..."
          sudo mysql -u ${{ secrets.DB_USER }} -p"${{ secrets.DB_ROOT_PASSWORD }}" -h 127.0.0.1 <<_EOF_
          ALTER USER '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED WITH mysql_native_password BY '${{ secrets.DB_ROOT_PASSWORD }}';
          FLUSH PRIVILEGES;
          _EOF_

      - name: Set Up MySQL Database
        run: |
          echo "Setting up MySQL database and user..."
          sudo mysql -u ${{ secrets.DB_USER }} -p"${{ secrets.DB_ROOT_PASSWORD }}" -h 127.0.0.1 <<EOF
          CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};
          FLUSH PRIVILEGES;
          EOF

      - name: Configure Environment Variables
        run: |
          echo "Writing environment variables to .env file..."
          touch src/.env
          echo DB_Host=127.0.0.1 >> src/.env  # Use 127.0.0.1 instead of localhost
          echo DB_User=${{ secrets.DB_USER }} >> src/.env
          echo DB_Pass=${{ secrets.DB_ROOT_PASSWORD }} >> src/.env
          echo DB_Name=${{ secrets.DB_NAME }} >> src/.env
          echo DB_Port=${{ secrets.DB_PORT || '3306' }} >> src/.env

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install
        working-directory: src

      - name: Run Tests
        run: npm test
        working-directory: src

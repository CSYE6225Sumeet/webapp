name: Packer Build

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build-ami:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Packer Build
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_INSTANCE_TYPE: ${{ secrets.AWS_INSTANCE_TYPE }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      AMI_NAME_PREFIX: ${{ secrets.AMI_NAME_PREFIX }}
      UBUNTU_AMI_OWNER: ${{ secrets.UBUNTU_AMI_OWNER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      MACHINE_TYPE: ${{ secrets.MACHINE_TYPE }}
      SOURCE_IMAGE_FAMILY: ${{ secrets.SOURCE_IMAGE_FAMILY }}
      DELETE_ON_TERMINATION: ${{ secrets.DELETE_ON_TERMINATION }}
      DEVICE_NAME: ${{ secrets.DEVICE_NAME }}
      VOLUME_SIZE: ${{ secrets.VOLUME_SIZE }}
      VOLUME_TYPE: ${{ secrets.VOLUME_TYPE }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_ZONE: ${{ secrets.GCP_ZONE }}
      DISK_SIZE: ${{ secrets.DISK_SIZE }}
      DISK_TYPE: ${{ secrets.DISK_TYPE }}
      GCP_CREDENTIALS_FILE: ${{ secrets.GCP_CREDENTIALS_FILE }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        id: setup

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install and Configure gcloud CLI
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_FILE }}'
          export_default_credentials: true


      - name: Create webapp.zip from existing directory
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip
          zip -r webapp.zip .
        shell: bash

      - name: Copy webapp.zip to packer directory
        run: cp webapp.zip ./src/packer/

      - name: Run packer init
        working-directory: ./src/packer
        id: init
        run: packer init packer.pkr.hcl

      - name: Run packer validate
        working-directory: ./src/packer
        id: validate
        run: packer validate packer.pkr.hcl

      - name: Build AMI
        working-directory: ./src/packer
        run: packer build packer.pkr.hcl

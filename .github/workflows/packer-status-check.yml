name: Packer CI

on:
  pull_request:
    branches: [main]

jobs:
  packer-check:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_INSTANCE_TYPE: ${{ secrets.AWS_INSTANCE_TYPE }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      AMI_NAME_PREFIX: ${{ secrets.AMI_NAME_PREFIX }}
      UBUNTU_AMI_OWNER: ${{ secrets.UBUNTU_AMI_OWNER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      MACHINE_TYPE: ${{ secrets.MACHINE_TYPE }}
      SOURCE_IMAGE_FAMILY: ${{ secrets.SOURCE_IMAGE_FAMILY }}
      DELETE_ON_TERMINATION: ${{ secrets.DELETE_ON_TERMINATION }}
      DEVICE_NAME: ${{ secrets.DEVICE_NAME }}
      VOLUME_SIZE: ${{ secrets.VOLUME_SIZE }}
      VOLUME_TYPE: ${{ secrets.VOLUME_TYPE }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_ZONE: ${{ secrets.GCP_ZONE }}
      DISK_SIZE: ${{ secrets.DISK_SIZE }}
      DISK_TYPE: ${{ secrets.DISK_TYPE }}
      # Initially set from secret; we'll override it for packer to use the file.
      GCP_CREDENTIALS_FILE: ${{ secrets.GCP_CREDENTIALS_FILE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create GCP credentials file in src/packer
        run: |
          mkdir -p src/packer
          echo "${{ secrets.GCP_CREDENTIALS_FILE }}" > src/packer/gcp_credentials.json
          # Set the variable so that Packer (running in src/packer) points to the local file
          echo "GCP_CREDENTIALS_FILE=./gcp_credentials.json" >> $GITHUB_ENV

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: '1.12.0'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_FILE }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create webapp.zip from existing directory
        run: |
          zip -r webapp.zip .
          cp webapp.zip src/packer
        shell: bash

      - name: Check Packer format
        working-directory: src/packer
        run: packer fmt -check .

      - name: Initialize Packer template
        working-directory: src/packer
        run: packer init .

      - name: Validate Packer template
        working-directory: src/packer
        run: packer validate .
